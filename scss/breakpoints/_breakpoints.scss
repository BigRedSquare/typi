@import 'utils';

// _ty-write-breakpoints-2
// ----------
// - writes props for every valid breakpoint
// ==========
@mixin _ty-write-breakpoints-2 (
  $_map
) {
  $target: map-get($_map, target);
  $breakpoints: map-get($_map, breakpoints);
  $typi: map-get($_map, typi);
  $rem: map-get($_map, rem);

  $basemap: null;
  $target-map: null;

  // Ensures target map is present
  @if not map-has-key($typi, $target) {
    @error "#{$target} not found in $typi map";
  }

  $target-map: map-get($typi, $target);

  // Ensures base map is present
  @if not map-has-key($typi, base) {
    @error "base key is missing from $typi map";
  }

  $basemap: map-get($typi, base);

  $_map: map-merge($_map, (
    basemap: $basemap,
    target-map: $target-map
  ));

  @each $breakpoint, $target-value in $target-map {
    @if $breakpoint == null {
      @include _ty-write-props-2(
        $_map: $_map,
        $breakpoint: $breakpoint
      );
    }

    @else {
      // Ensures there's breakpoint
      // No need to use this value, because error would have already been thrown in the function
      $has-breakpoint: _ty-has-breakpoint(
        $breakpoint: $breakpoint,
        $breakpoints: $breakpoints,
        $basemap: $basemap
      );

      @if _has-breakpoint-library('breakpoint') {
        @include breakpoint-set('to ems', true);
        @include breakpoint(map-get($breakpoints, $breakpoint)) {

          @include _ty-write-props-2(
            $_map: $_map,
            $breakpoint: $breakpoint
          );
        }
      }

      @else if _has-breakpoint-library('mappy-bp') {
        @include mappy-bp(map-get($breakpoints, $breakpoint)) {
          @include _ty-write-props-2(
            $_map: $_map,
            $breakpoint: $breakpoint
          );
        }
      }

      @else {
        @media all and (min-width: #{map-get($breakpoints, $breakpoint)}) {
          @include _ty-write-props-2(
            $_map: $_map,
            $breakpoint: $breakpoint
          );
        }
      }
    }
  }
}

// // _ty-get-breakpoints
// // ===================
// @function _ty-get-breakpoints($breakpoints, $typi-ms, $target) {
//   $_return: null;

//   @each $breakpoint, $val in $breakpoints {
//     @if type-of($typi-ms) == 'map' and map-has-key($typi-ms, $breakpoint) {
//       @if not index($_return, $breakpoint) {
//         $_return: append($_return, $breakpoint);
//       }
//     }

//     @if map-has-key($target, $breakpoint) {
//       @if not index($_return, $breakpoint) {
//         $_return: append($_return, $breakpoint);
//       }
//     }
//   }
//   @return $_return;
// }
