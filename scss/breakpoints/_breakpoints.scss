// _ty-has-breakpoint
// ----------
// - Ensures $breakpoints and $typi has breakpoint
// ==========
@function _ty-has-breakpoint (
  $breakpoint: $breakpoint,
  $breakpoints: $breakpoints,
  $basemap: $basemap
  ) {
  @if not map-has-key($breakpoints, $breakpoint) {
    @error "$breakpoints map is missing #{$breakpoint} key";
  }

  @if not map-has-key($basemap, $breakpoint) {
    @error "$typi base key is missing #{$breakpoint} key";
  }

  @return true;
}

// _ty-write-breakpoints-2
// ----------
// - writes props for every valid breakpoint
// ==========
@mixin _ty-write-breakpoints-2(
  $target: $target,
  $breakpoints: $breakpoints,
  $typi: $typi,
  $rem: $rem
  ) {
  $basemap: null;
  $target-map: null;

  // Ensures target map is present
  @if not map-has-key($typi, $target) {
    @error "#{$target} not found in $typi map";
  }

  $target-map: map-get($typi, $target);

  // Ensures base map is present
  @if not map-has-key($typi, base) {
    @error "base key is missing from $typi map";
  }

  $basemap: map-get($typi, base);

  @each $breakpoint, $target-value in $target-map {
    @if $breakpoint == null {
      @include _ty-write-props-2(
        $target-map: $target-map,
        $breakpoint: $breakpoint,
        $basemap: $basemap,
        $rem: $rem
      );
    }

    @else {
      // Ensures there's breakpoint
      // No need to use this value, because error would have already been thrown in the function
      $has-breakpoint: _ty-has-breakpoint(
        $breakpoint: $breakpoint,
        $breakpoints: $breakpoints,
        $basemap: $basemap
      );

      @if _has-breakpoint-library('breakpoint') {
        @include breakpoint-set('to ems', true);
        @include breakpoint(map-get($breakpoints, $breakpoint)) {

          @include _ty-write-props-2(
            $target-map: $target-map,
            $breakpoint: $breakpoint,
            $basemap: $basemap,
            $rem: $rem
          );
        }
      }

      @else if _has-breakpoint-library('mappy-bp') {
        @include mappy-bp(map-get($breakpoints, $breakpoint)) {
          @include _ty-write-props-2(
            $target-map: $target-map,
            $breakpoint: $breakpoint,
            $basemap: $basemap,
            $rem: $rem
          );
        }
      }

      @else {
        @media all and (min-width: #{map-get($breakpoints, $breakpoint)}) {
          @include _ty-write-props-2(
            $target-map: $target-map,
            $breakpoint: $breakpoint,
            $basemap: $basemap,
            $rem: $rem
          );
        }
      }
    }
  }
}

// _has-breakpoint-library
// - Checks if breakpoint library is installed
// ==========
@function _has-breakpoint-library($lib) {
  // Activates if $typi-breakpoint = mentioned breakpoint
  @if $typi-breakpoint == $lib {
    @if mixin-exists($lib) { @return true; }
    @else { @error "#{$lib} not found"; }
  }
  // Else use default breakpoint built in typi
  @else {
    @return false;
  }
}


// _ty-get-breakpoints
// ===================
@function _ty-get-breakpoints($breakpoints, $typi-ms, $target) {
  $_return: null;

  @each $breakpoint, $val in $breakpoints {
    @if type-of($typi-ms) == 'map' and map-has-key($typi-ms, $breakpoint) {
      @if not index($_return, $breakpoint) {
        $_return: append($_return, $breakpoint);
      }
    }

    @if map-has-key($target, $breakpoint) {
      @if not index($_return, $breakpoint) {
        $_return: append($_return, $breakpoint);
      }
    }
  }
  @return $_return;
}

// _ty-write-breakpoints
// ==============
// Allows use of breakpoint-sass and mappy-bp.
// Falls back to default method otherwise.
@mixin _ty-write-breakpoints(
  $typi-map
  ) {
  $breakpoint: map-get($typi-map, breakpoint);
  $breakpoints: map-get($typi-map, breakpoints);
  $bp-val: map-get($breakpoints, $breakpoint);

  @if $typi-breakpoint == breakpoint {
    @if mixin-exists(breakpoint) {
      @include breakpoint-set('to ems', true);
      @include breakpoint(map-get($breakpoints, $breakpoint)) {
        @include _ty-write-props($typi-map);
      }
    } @else {
      @error 'Breakpoint-sass Library not found'
    }
  }

  @else if $typi-breakpoint == mappy-breakpoint or $typi-breakpoint == mappy-breakpoints {
    @if mixin-exists(mappy-bp) {
      @include mappy-bp(map-get($breakpoints, $breakpoint)) {
        @include _ty-write-props($typi-map);
      }
    } @else {
      @error 'Mappy Breakpoints Library not found'
    }
  }

  @else {
    @media all and (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @include _ty-write-props($typi-map);
    }
  }
}
