@function vr(
  $vr,
  $current-font-size: null,
  $typeface: null,
  $basemap: map-get($typi, base),
  $typefaces: $typefaces
) {
  $base-font-size: _ty-get-base-font-size($basemap);
  $base-line-height: _ty-get-base-line-height($basemap);
  $rhythm: $vr * $base-line-height;

  // Returns rem values
  @if not $current-font-size {
    @return _ty-to-rem($rhythm * 1em);
  }

  // return em values
  @else {
    $_rhythm-multiplier: 1;
    $_return: 1;
    @if $typeface {
      $_rhythm-multiplier: 1 / _ty-get-typeface-multiplier($typeface, $typefaces);
    }

    @if unit($current-font-size) == 'px' {
      $rhythm-px: $rhythm * $base-font-size;
      $_return: _ty-to-em($rhythm-px, $current-font-size);
    }
    @else if unit($current-font-size) == 'em' {
      $_return: _ty-to-em($rhythm * 1em, $current-font-size);
    }


    @return $_return * $_rhythm-multiplier;
  }
}

// vr-ms
// ----------
// Font-size changes at different breakpoints when ratio changes.
// When font-size changes, em values of vr must change.
// Must recalculate current font-size first, since font-size calculated with typi multiplier
@mixin vr-ms(
  $properties,
  $vr,
  $target,
  $typeface: false,
  $typi: $typi,
  $typi-ms: $typi-ms,
  $typefaces: $typefaces,
  $breakpoints: $breakpoints
) {
  @include _ty-write-breakpoints((
    breakpoints: $breakpoints,
    output: 'vr',
    properties: $properties,
    rem: true,
    target: $target,
    typeface: $typeface,
    typefaces: $typefaces,
    typi-ms: $typi-ms,
    typi: $typi,
    vr: $vr
  ))
}
